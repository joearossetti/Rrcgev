// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// DemandLogit__new
RcppExport SEXP DemandLogit__new(Eigen::MatrixXd mu_, double u_opt_out_);
RcppExport SEXP _Rrcgev_DemandLogit__new(SEXP mu_SEXP, SEXP u_opt_out_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type mu_(mu_SEXP);
    Rcpp::traits::input_parameter< double >::type u_opt_out_(u_opt_out_SEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__new(mu_, u_opt_out_));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__compute
RcppExport SEXP DemandLogit__compute(SEXP xp, Eigen::VectorXd delta_);
RcppExport SEXP _Rrcgev_DemandLogit__compute(SEXP xpSEXP, SEXP delta_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type delta_(delta_SEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__compute(xp, delta_));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__getShares
RcppExport SEXP DemandLogit__getShares(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__getShares(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__getShares(xp));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__getIncValue
RcppExport SEXP DemandLogit__getIncValue(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__getIncValue(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__getIncValue(xp));
    return rcpp_result_gen;
END_RCPP
}
// Dlfp10d1000__new
RcppExport SEXP Dlfp10d1000__new();
RcppExport SEXP _Rrcgev_Dlfp10d1000__new() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Dlfp10d1000__new());
    return rcpp_result_gen;
END_RCPP
}
// Dlfp10d1000__setS_0
RcppExport SEXP Dlfp10d1000__setS_0(SEXP xp, Eigen::VectorXd s_0_);
RcppExport SEXP _Rrcgev_Dlfp10d1000__setS_0(SEXP xpSEXP, SEXP s_0_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type s_0_(s_0_SEXP);
    rcpp_result_gen = Rcpp::wrap(Dlfp10d1000__setS_0(xp, s_0_));
    return rcpp_result_gen;
END_RCPP
}
// Dlfp10d1000__getS_0
RcppExport SEXP Dlfp10d1000__getS_0(SEXP xp);
RcppExport SEXP _Rrcgev_Dlfp10d1000__getS_0(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(Dlfp10d1000__getS_0(xp));
    return rcpp_result_gen;
END_RCPP
}
// Dlfp10d1000__compute
RcppExport SEXP Dlfp10d1000__compute(SEXP xp, Eigen::VectorXd delta_, Eigen::MatrixXd mu_);
RcppExport SEXP _Rrcgev_Dlfp10d1000__compute(SEXP xpSEXP, SEXP delta_SEXP, SEXP mu_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type delta_(delta_SEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type mu_(mu_SEXP);
    rcpp_result_gen = Rcpp::wrap(Dlfp10d1000__compute(xp, delta_, mu_));
    return rcpp_result_gen;
END_RCPP
}
// Dlfp10d1000__getShares
RcppExport SEXP Dlfp10d1000__getShares(SEXP xp);
RcppExport SEXP _Rrcgev_Dlfp10d1000__getShares(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(Dlfp10d1000__getShares(xp));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__setS_0
RcppExport SEXP DemandLogit__setS_0(SEXP xp, Eigen::VectorXd s_0_);
RcppExport SEXP _Rrcgev_DemandLogit__setS_0(SEXP xpSEXP, SEXP s_0_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type s_0_(s_0_SEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__setS_0(xp, s_0_));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__calcObj_val
RcppExport SEXP DemandLogit__calcObj_val(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__calcObj_val(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__calcObj_val(xp));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__calcGradient
RcppExport SEXP DemandLogit__calcGradient(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__calcGradient(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__calcGradient(xp));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__calcHessian
RcppExport SEXP DemandLogit__calcHessian(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__calcHessian(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__calcHessian(xp));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__getGradient
RcppExport SEXP DemandLogit__getGradient(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__getGradient(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__getGradient(xp));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__getHessian
RcppExport SEXP DemandLogit__getHessian(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__getHessian(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__getHessian(xp));
    return rcpp_result_gen;
END_RCPP
}
// DemandLogit__getObj_val
RcppExport SEXP DemandLogit__getObj_val(SEXP xp);
RcppExport SEXP _Rrcgev_DemandLogit__getObj_val(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(DemandLogit__getObj_val(xp));
    return rcpp_result_gen;
END_RCPP
}
// root_lm
NumericVector root_lm(Eigen::VectorXd delta_init, Eigen::MatrixXd mu_, double u_opt_out_, Eigen::VectorXd s_0_);
RcppExport SEXP _Rrcgev_root_lm(SEXP delta_initSEXP, SEXP mu_SEXP, SEXP u_opt_out_SEXP, SEXP s_0_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type delta_init(delta_initSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type mu_(mu_SEXP);
    Rcpp::traits::input_parameter< double >::type u_opt_out_(u_opt_out_SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type s_0_(s_0_SEXP);
    rcpp_result_gen = Rcpp::wrap(root_lm(delta_init, mu_, u_opt_out_, s_0_));
    return rcpp_result_gen;
END_RCPP
}
// UnobsvHetero__new
RcppExport SEXP UnobsvHetero__new(Rcpp::NumericMatrix rand_mat_, Rcpp::LogicalVector which_nln_parmtrs_, int num_draws_, int dim_sigma_);
RcppExport SEXP _Rrcgev_UnobsvHetero__new(SEXP rand_mat_SEXP, SEXP which_nln_parmtrs_SEXP, SEXP num_draws_SEXP, SEXP dim_sigma_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type rand_mat_(rand_mat_SEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type which_nln_parmtrs_(which_nln_parmtrs_SEXP);
    Rcpp::traits::input_parameter< int >::type num_draws_(num_draws_SEXP);
    Rcpp::traits::input_parameter< int >::type dim_sigma_(dim_sigma_SEXP);
    rcpp_result_gen = Rcpp::wrap(UnobsvHetero__new(rand_mat_, which_nln_parmtrs_, num_draws_, dim_sigma_));
    return rcpp_result_gen;
END_RCPP
}
// UnobsvHetero__getNln_parmtrs_mat
RcppExport SEXP UnobsvHetero__getNln_parmtrs_mat(SEXP xp, Rcpp::NumericVector short_pars_vec_);
RcppExport SEXP _Rrcgev_UnobsvHetero__getNln_parmtrs_mat(SEXP xpSEXP, SEXP short_pars_vec_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type short_pars_vec_(short_pars_vec_SEXP);
    rcpp_result_gen = Rcpp::wrap(UnobsvHetero__getNln_parmtrs_mat(xp, short_pars_vec_));
    return rcpp_result_gen;
END_RCPP
}
// UnobsvHetero__getNui_mat
RcppExport SEXP UnobsvHetero__getNui_mat(SEXP xp, Eigen::MatrixXd sigma_mat_);
RcppExport SEXP _Rrcgev_UnobsvHetero__getNui_mat(SEXP xpSEXP, SEXP sigma_mat_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type sigma_mat_(sigma_mat_SEXP);
    rcpp_result_gen = Rcpp::wrap(UnobsvHetero__getNui_mat(xp, sigma_mat_));
    return rcpp_result_gen;
END_RCPP
}
// vec_sub
Eigen::VectorXd vec_sub(Eigen::VectorXd x, NumericVector start_vec, NumericVector end_vec, int M);
RcppExport SEXP _Rrcgev_vec_sub(SEXP xSEXP, SEXP start_vecSEXP, SEXP end_vecSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type start_vec(start_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type end_vec(end_vecSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_sub(x, start_vec, end_vec, M));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rrcgev_DemandLogit__new", (DL_FUNC) &_Rrcgev_DemandLogit__new, 2},
    {"_Rrcgev_DemandLogit__compute", (DL_FUNC) &_Rrcgev_DemandLogit__compute, 2},
    {"_Rrcgev_DemandLogit__getShares", (DL_FUNC) &_Rrcgev_DemandLogit__getShares, 1},
    {"_Rrcgev_DemandLogit__getIncValue", (DL_FUNC) &_Rrcgev_DemandLogit__getIncValue, 1},
    {"_Rrcgev_Dlfp10d1000__new", (DL_FUNC) &_Rrcgev_Dlfp10d1000__new, 0},
    {"_Rrcgev_Dlfp10d1000__setS_0", (DL_FUNC) &_Rrcgev_Dlfp10d1000__setS_0, 2},
    {"_Rrcgev_Dlfp10d1000__getS_0", (DL_FUNC) &_Rrcgev_Dlfp10d1000__getS_0, 1},
    {"_Rrcgev_Dlfp10d1000__compute", (DL_FUNC) &_Rrcgev_Dlfp10d1000__compute, 3},
    {"_Rrcgev_Dlfp10d1000__getShares", (DL_FUNC) &_Rrcgev_Dlfp10d1000__getShares, 1},
    {"_Rrcgev_DemandLogit__setS_0", (DL_FUNC) &_Rrcgev_DemandLogit__setS_0, 2},
    {"_Rrcgev_DemandLogit__calcObj_val", (DL_FUNC) &_Rrcgev_DemandLogit__calcObj_val, 1},
    {"_Rrcgev_DemandLogit__calcGradient", (DL_FUNC) &_Rrcgev_DemandLogit__calcGradient, 1},
    {"_Rrcgev_DemandLogit__calcHessian", (DL_FUNC) &_Rrcgev_DemandLogit__calcHessian, 1},
    {"_Rrcgev_DemandLogit__getGradient", (DL_FUNC) &_Rrcgev_DemandLogit__getGradient, 1},
    {"_Rrcgev_DemandLogit__getHessian", (DL_FUNC) &_Rrcgev_DemandLogit__getHessian, 1},
    {"_Rrcgev_DemandLogit__getObj_val", (DL_FUNC) &_Rrcgev_DemandLogit__getObj_val, 1},
    {"_Rrcgev_root_lm", (DL_FUNC) &_Rrcgev_root_lm, 4},
    {"_Rrcgev_UnobsvHetero__new", (DL_FUNC) &_Rrcgev_UnobsvHetero__new, 4},
    {"_Rrcgev_UnobsvHetero__getNln_parmtrs_mat", (DL_FUNC) &_Rrcgev_UnobsvHetero__getNln_parmtrs_mat, 2},
    {"_Rrcgev_UnobsvHetero__getNui_mat", (DL_FUNC) &_Rrcgev_UnobsvHetero__getNui_mat, 2},
    {"_Rrcgev_vec_sub", (DL_FUNC) &_Rrcgev_vec_sub, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rrcgev(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
